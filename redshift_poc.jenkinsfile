properties([parameters([
        choice(choices: ['CreateTable', 'InsertTable', 'AlterTable', 'DropTable'
        ], description: 'Select the action to do at cluster ', name: 'Action'), 
        string(defaultValue: 'jenkinstable', description: 'Enter Databasename or Tablename', name: 'Name')])])
pipeline{
    agent any
    environment {
        REDSHIFT_HOST = 'redshift-test.cwam4guzwuwl.ap-south-1.redshift.amazonaws.com'
        //redshift-test'
        REDSHIFT_PORT = '5439'
        REDSHIFT_DB = 'dev'
        REDSHIFT_USER = 'admin'
        REDSHIFT_PASSWORD = 'Admin123'
    }

    stages {
        stage('Create Table') {
            steps {
                script {
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: "aws-test",
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]]) {
                    
                    if(params.Action == 'CreateTable'){
                        def CREATE_TABLE = """
                        CREATE TABLE ${Name}(id int, mobile int,name varchar)
                        """
                        sh """
                        echo "Creating Table ${Name}"
                        /usr/local/bin/aws redshift-data execute-statement --cluster-identifier redshift-test --database dev --db-user ${REDSHIFT_USER} --sql "${CREATE_TABLE}"

                    """
                    }

                    if(params.Action == 'InsertTable') {
                        def INSERT_TABLE="""
                        INSERT INTO ${Name} VALUES(1,123,'DHANYA')
                        """
                        sh """
                        echo "Inserting data into table ${Name}"
                        /usr/local/bin/aws redshift-data execute-statement --cluster-identifier redshift-test --database dev --db-user ${REDSHIFT_USER} --sql "${INSERT_TABLE}"

                    """
                    }

                    if(params.Action == 'AlterTable') {
                        def ALTER_TABLE ="""
                            ALTER TABLE ${NAME} drop column mobile;
                            //ALTER TABLE ${NAME} column place varchar;
                        """
                        
                        sh """
                        echo "Altering data into table ${Name}"
                        /usr/local/bin/aws redshift-data execute-statement --cluster-identifier redshift-test --database dev --db-user ${REDSHIFT_USER} --sql "${ALTER_TABLE}"

                        """

                    }

                    if(params.Action == 'DropTable') {
                        def DROP_TABLE ="""
                            DROP TABLE if exists ${Name};
                        """
                        sh """
                        echo "Deleting  table ${Name}"
                        /usr/local/bin/aws redshift-data execute-statement --cluster-identifier redshift-test --database dev --db-user ${REDSHIFT_USER} --sql "${DROP_TABLE}"

                    """

                    }

                    if(params.Action == 'CRETAEDb') {
                        def CREATE_DB ="""
                        CREATE DATABASE ${Name}
                        """
                        sh """
                        echo "Creating  Database ${Name}"
                        /usr/local/bin/aws redshift-data execute-statement --cluster-identifier redshift-test --db-user ${REDSHIFT_USER} --sql "${CREATE_DB}"

                        """

                    }
                    
                    
                    
                    // def SELECT_TABLE='''
                    //     SELECT * FROM jenkinstable
                    // '''
                    // def 
                   
                    // sh """
                    //     echo "Selcting all data from jenkinsTable"
                    //     /usr/local/bin/aws redshift-data execute-statement --cluster-identifier redshift-test --database dev --db-user ${REDSHIFT_USER} --sql "${SELECT_TABLE}"

                    // """
                    
                    }
                    
                }
            }
        }
    }
}